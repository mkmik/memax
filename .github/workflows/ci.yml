name: CI
on:
  pull_request:
  push:
    branches:
      - main

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always

jobs:
  ci-pass:
    name: CI is green
    runs-on: ubuntu-latest
    needs:
      - test-linux
      - test-macos
      # - build-cross
      - test-cgroups
    steps:
      - run: exit 0

  test-linux:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        rust:
          - stable
          - beta
          - nightly
        target:
          - x86_64-unknown-linux-gnu

    steps:
      - uses: actions/checkout@v3
      - name: Run tests
        run: |
          rustup default ${{ matrix.rust }}
          rustup target add ${{ matrix.target }}
          cargo test --verbose --target ${{ matrix.target }}

  test-macos:
    runs-on: macos-latest

    strategy:
      matrix:
        rust:
          - stable
          - beta
          - nightly
        target:
          - x86_64-apple-darwin

    steps:
      - uses: actions/checkout@v3
      - name: Run tests
        run: |
          rustup default ${{ matrix.rust }}
          rustup target add ${{ matrix.target }}
          cargo test --verbose --target ${{ matrix.target }}

  test-cgroups:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Test Cgroup
        run: |
          docker build -f ci/cgroups/Dockerfile -t memax-cgroups .
          MEM=$(grep MemTotal /proc/meminfo | awk '{print $2 * 1024}')
          docker run -e MEMAX_TEST_GET="$MEM" -e MEMAX_TEST_GET_PHY="$MEM" memax-cgroups
          # Only 100 MB
          docker run --memory="100000000" -e MEMAX_TEST_GET=100000000 -e MEMAX_TEST_GET_PHY="$MEM" memax-cgroups
          # Only 200 MB
          docker run --memory="200000000" -e MEMAX_TEST_GET=200000000 -e MEMAX_TEST_GET_PHY="$MEM" memax-cgroups
